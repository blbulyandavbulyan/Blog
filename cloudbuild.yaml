options:
  logging: CLOUD_LOGGING_ONLY
steps:
  - name: 'gcr.io/cloud-builders/docker'
    env: 
      - 'DOCKER_BUILDKIT=1'
    entrypoint: 'bash'
    args:
      - '-c'
      - | 
        docker build \
        -t ${_IMAGE_REPO_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_IMAGE_REPO_NAME}/blog:${REVISION_ID} \
        -t ${_IMAGE_REPO_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_IMAGE_REPO_NAME}/blog:latest \
        .

  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker push ${_IMAGE_REPO_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_IMAGE_REPO_NAME}/blog:${REVISION_ID}
        docker push ${_IMAGE_REPO_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_IMAGE_REPO_NAME}/blog:latest
  - name: 'blbulyandavbulyan/gcloud-helm:latest'
    entrypoint: 'bash'
    secretEnv: ['DB_USERNAME', 'DB_PASSWORD']
    args:
      - '-c'
      - |
        echo "Retrieving kubernetes cluster credentials" 
        gcloud container clusters get-credentials ${_GKE_CLUSTER_NAME} --region ${LOCATION} --project ${PROJECT_ID}
        echo "Deploying application to GKE"
        helm upgrade -i ${_CHART_NAME} deploy-templates/ -f deploy-templates/values.yaml \
        --set image.repository="${_IMAGE_REPO_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_IMAGE_REPO_NAME}/blog" \
        --set db.cloud.sql.proxy.create=true \
        --set serviceAccount.create=true \
        --set-literal serviceAccount.gcp="${_GCP_SERVICE_ACCOUNT}" \
        --set-literal db.user="$$DB_USERNAME" \
        --set-literal db.password="$$DB_PASSWORD" \
        --set-literal db.cloudSqlProxy.instanceConnectionName="${_CLOUD_SQL_INSTANCE_CONNECTION_NAME}"
availableSecrets:
  secretManager:
    - versionName: ${_DB_PASSWORD_SECRET_NAME}
      env: 'DB_PASSWORD'
    - versionName: ${_DB_USERNAME_SECRET_NAME}
      env: 'DB_USERNAME'
